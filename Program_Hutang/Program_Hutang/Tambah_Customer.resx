<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAShJREFUOE+lkF1Og1AQRmcdJgUKVtumIqlNgaYNEMG2Ny2h/Ii7MdEFuATjStxG
        H3l2EyNz9Sa3JUa0k5yEO3O+7wHIi/uqKEr8K1le7uP44Qx2aY4yaZqqMklSGkmSe3GW2fQ+8HfpHuI4
        QRk4GsZSlfbbbfJO74bP2AZleEoaxphK+/V6wwsa/nK5QhmekoYKaH8XrXhBww9vIzwgDOdBEKgSRuiH
        nu9HNt2OffC9AE8BFvMFngK4jouEYzsfM3v2Vn+/uu4P1DdyyBU5mE6m+MXkif+1FlO7zyIHN9YYibFl
        PX7ffx1yRQ6ur0wkzJHZuoBckYPRYIic/rB1AbkiB4PeJRL984vWBeSKHPR0Aznd7oumaWobjNoVOdA7
        SqUrKv6LjlJ9Av0OILKiMKZVAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAVJJREFUOE+Fk9tugkAURedLqJdg0dBSS2M0LbG1dCxWLaKmT3yB8/u8mTM9G4kZ
        ZWhPshI4e21uCQKT7Xb5fv9TbLf7Q7n4Y+DARadcfGdZnm62x0220wylaabKwDLI4MBFB12xXqcFow1o
        tVrVLoIdsiu3EEmyPCwWS2K0ASXJ1/kiOLY7y9MrS5mo+fyTGG1AUkolY9mQJZdPGc9iFb9/EKMNcF7f
        sVvVLmc2nanX6RsxugGaslPp9omeIxW9RMToKwhZpTXPeDRWk/GEGH0FIas0+4RhqEZPI2J0AwSn0i9n
        GAxV+PBIjDbAeW0Ht6qdxvd9FdzdE6MNKMDeD6wZOmV54HkHvz8gRhuQ7w3Od8GxzUFXeG6v6Lu32oA8
        16u9J3bITBdd0Wt1c7fTPTKaIbfdtX8kHmSlc3KP6JZBy2nlHeemaDvOv78zHLjoCCHEL2NZBIgIww02
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>